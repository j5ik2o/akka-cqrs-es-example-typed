j5ik2o {
  dynamo-db-journal {
    class = "com.github.j5ik2o.akka.persistence.dynamodb.journal.DynamoDBJournal"
    plugin-dispatcher = "akka.actor.default-dispatcher"

    circuit-breaker {
      max-failures = 10
      call-timeout = 10s
      reset-timeout = 30s
    }

    table-name = "Journal"
    get-journal-rows-index-name = "GetJournalRowsIndex"

    tags-index-name = "TagsIndex"

    shard-count = 1024
    partition-key-resolver-class-name = "com.github.j5ik2o.adceet.api.write.infrastructure.akka.persistence.dynamodb.journal.JournalPartitionKeyResolver"
    sort-key-resolver-class-name = "com.github.j5ik2o.akka.persistence.dynamodb.journal.SortKeyResolver$PersistenceIdWithSeqNr"

    queue-enable = true
    queue-buffer-size = 512
    queue-overflow-strategy = "Fail"
    queue-parallelism = 1024
    write-parallelism = 1024
    query-batch-size = 32
    scan-batch-size = 512
    replay-batch-size = 1024

    consistent-read = false
    soft-delete = true

    # metrics-reporter-class-name = "com.github.j5ik2o.adceet.api.write.infrastructure.akka.persistence.dynamodb.V1MetricReporter"
    trace-reporter-class-name = "com.github.j5ik2o.adceet.api.write.infrastructure.akka.persistence.dynamodb.journal.JournalPluginTraceReporter"

    dynamo-db-client {
      region = ${AWS_REGION}
      client-version = "v2"
      client-type = "async"
      v2 {
        aws-credentials-provider-provider-class-name = "com.github.j5ik2o.adceet.api.write.infrastructure.akka.persistence.dynamodb.V2AwsCredentialsProviderProviderImpl"
        metric-publisher-class-names = ["com.github.j5ik2o.adceet.api.write.infrastructure.akka.persistence.dynamodb.V2MetricPublisher"]
        async {
          max-concurrency = 2048
          max-pending-connection-acquires = 10000
          read-timeout = 10s
          write-timeout = 10s
          connection-timeout = 10s
          connection-acquisition-timeout = 10s
          connection-time-to-live = 0s
          max-idle-connection-timeout = 10s
          use-connection-reaper = true
          threads-of-event-loop-group = 512
          use-http2 = false
          http2-max-streams = 32
        }
      }
    }
  }

  dynamo-db-snapshot {
    class = "com.github.j5ik2o.akka.persistence.dynamodb.snapshot.DynamoDBSnapshotStore"
    plugin-dispatcher = "akka.actor.default-dispatcher"

    circuit-breaker {
      max-failures = 10
      call-timeout = 10s
      reset-timeout = 30s
    }

    table-name = "Snapshot"
    get-snapshot-rows-index-name = "GetSnapshotRowsIndex"

    shard-count = 1024
    partition-key-resolver-class-name = "com.github.j5ik2o.adceet.api.write.infrastructure.akka.persistence.dynamodb.snapshot.SnapshotPartitionKeyResolver"
    sort-key-resolver-class-name = "com.github.j5ik2o.akka.persistence.dynamodb.snapshot.SortKeyResolver$PersistenceIdWithSeqNr"

    metrics-reporter-class-name = "com.github.j5ik2o.adceet.api.write.infrastructure.akka.persistence.dynamodb.snapshot.SnapshotPluginMetricReporter"
    trace-reporter-class-name = "com.github.j5ik2o.adceet.api.write.infrastructure.akka.persistence.dynamodb.snapshot.SnapshotPluginTraceReporter"

    dynamo-db-client {
      region = ${AWS_REGION}
      client-version = "v2"
      client-type = "async"
      v2 {
        aws-credentials-provider-provider-class-name = "com.github.j5ik2o.adceet.api.write.infrastructure.akka.persistence.dynamodb.V2AwsCredentialsProviderProviderImpl"
        metric-publisher-class-names = ["com.github.j5ik2o.adceet.api.write.infrastructure.akka.persistence.dynamodb.V2MetricPublisher"]
        async {
          max-concurrency = 2048
          max-pending-connection-acquires = 10000
          read-timeout = 10s
          write-timeout = 10s
          connection-timeout = 10s
          connection-acquisition-timeout = 10s
          connection-time-to-live = 0s
          max-idle-connection-timeout = 10s
          use-connection-reaper = true
          threads-of-event-loop-group = 512
          use-http2 = false
          http2-max-streams = 32
        }
      }
    }
  }

}

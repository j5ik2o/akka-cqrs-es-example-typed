image:
  repository: '{{ .Values.readApiServer.image.repository }}'
  tag: '{{ env "READ_API_SERVER_IMAGE_TAG" | default .Values.readApiServer.image.tag }}'
  pullPolicy: '{{ .Values.readApiServer.image.pullPolicy}}'

{{- if .Values.ecrCred.enabled }}
imagePullSecrets:
  - name: ecr-cred-regcred
{{- end }}

nameOverride: ""
fullnameOverride: ""

affinity: {}

command:
  - /opt/docker/bin/adceet-read-api-server-{{ env "MODE" | default "scala" }}
  - -Dconfig.resource=production.conf
  - -Dconfig.override_with_env_vars=true
  - --
  - -e
  - Development


env:
  {{- with .Values.readApiServer.env }}
  {{- toYaml . | nindent 2 }}
  {{- end }}
  - name: "AWS_REGION"
    value: {{ requiredEnv "AWS_REGION" }}
  - name: CONFIG_FORCE_kamon_environment_tags_version
    value: '{{ env "READ_API_SERVER_IMAGE_TAG" | default .Values.readApiServer.image.tag}}'

startupProbe:
  enabled: false

livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 5
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3

nodeSelector: {}

podAnnotations: {}

podLabels: {}

podSecurityContext:
  fsGroup: 0

readinessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 5
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3

replicaCount: {{ .Values.readApiServer.replicaCount }}

resources:
  {{- toYaml .Values.readApiServer.resources | nindent 2 }}

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 10%
    maxUnavailable: 0%

terminationGracePeriodSeconds: {{ add .Values.readApiServer.processTimeoutInSec 5 }}

rbac:
  create: true

serviceAccount:
  create: {{ .Values.readApiServer.serviceAccount.create }}
  {{- if .Values.readApiServer.serviceAccount.name }}
  name: {{ .Values.readApiServer.serviceAccount.name }}
  {{- end }}

podDisruptionBudget:
  enabled: true
  maxUnavailable: 1

autoscaling:
  {{- toYaml .Values.readApiServer.autoscaling | nindent 2 }}

metrics:
  enabled: false
  port: 9095
  path: "/"

configmaps:
  chart.conf: ""
  akka.conf: ""
  kamon.conf: ""

useResourceApplicationConf: false